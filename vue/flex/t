
export default ***，
import *** from，把模块作为对象引入
对象操作符，合并对象 
...扩展运算符：用于展开可迭代的对象。
reactive是响应式数据，用于存储复杂数据类型,比如对象和数组，
对比ref用来存储单个类型，数字和字符串，也可以存数组
v-show,v-if,v-bind动态属性绑定，可简写称：  :value, :class="{textcolor:web.fontStatus}", :src, :title,:key="value.id"可以提升性能
v-for, v-model, v-model.lazy, .number,.trim
v-text={{}}, v-html
watch监听对象中的某个属性
reduce函数累加
http://127.0.0.1:777/article/get/all
15.1课，语法
*4.父传子 defineProps，有两种接受方式：数组和对象
1）传递常量，在子组件标签上定义属性用于传递数据，
2）传递对象，子组件标签上，定义v-bind,可以简写为:
*5.子传父 defineEmits，的参数是一个数组，数组内的元素，是将触发自定义事件的名称
1）子组件声明自定义事件A和参数a。const emits = defineEmits(["getWeb", "userAdd"])
2）父组件在子组件标签内写A，并写接收函数，参数是a
*6.跨组件通信-依赖注入
1）父组件用provide将数据传递给所有子组件。第一个参数是key，第二个是要传递的值。
2）子组件inject的参数就是传入的key，conse web接收数据
3）只能从上往下传递
4）传递函数
*7.匿名插槽和具名插槽
匿名
1）父组件定义的模板片段A，
2）子组件中将A插入到特定位置
具名
1）在父组件用<tempate>标签，给template定义一个属性v-slot:url和名称
2）内定义的模板片段A，
3）子组件中将A插入到特定位置<slot name="url">
*8.作用域插槽：在子组件内像父组件传递数据，并在父组件定义的模板中渲染
1）子组件在<slot name="url">标签内写属性title="uu"
2)父组件<slot #url="data">，然后用data.title就可以使用
2）还可以用解构的形式<slot #url="{title}">
9.生命周期函数
10.toRef和toRefs 

回调函数是把一个函数作为参数传递给另一个函数的用法，因为传入的函数，需要在主函数内部调用才会执行。
回调可以理解为回头再调用。只要搞懂传入和调用的关系。